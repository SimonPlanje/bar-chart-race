{"version":3,"sources":["components/BarchartRace.js","components/Loading.js","helper/data.js","App.js","reportWebVitals.js","index.js"],"names":["BarchartRace","dayData","eventData","data","filter","d","partij","console","log","partijen","Set","map","datevalues","d3","Array","from","midden","datum","date","Date","sort","a","b","width","Math","max","document","documentElement","clientWidth","window","innerWidth","margin","n","duration","height","barSize","svg","append","attr","numLocale","decimal","thousands","grouping","currency","timeLocale","dateTime","time","periods","days","shortDays","months","shortMonths","formatNumber","format","formatDate","utcFormat","euroFormat","x","y","domain","rangeRound","padding","rank","value","i","length","ranking","min","name","get","ka","kb","keyframes","t","push","nameframes","flatMap","prev","Map","next","sliderFrame","sliderBottom","step","fill","handle","type","size","on","val","render","interrupt","call","dataDates","dataMonths","maand","timeline","tickFormat","tickValues","gTimeline","xTime","range","div","style","color","party","textTween","this","textContent","selectAll","enter","event","transition","html","gebeurtenis","pageX","pageY","elapsedTime","updateBars","bar","slice","join","bandwidth","update","exit","remove","bars","updateAxis","g","axis","ticks","tickSizeOuter","tickSizeInner","_","select","updateLabels","label","text","tween","labels","updateTicker","displayedDate","end","then","catch","ticker","index","ease","className","Loading","props","viewBox","rx","ry","metadata","github","description","filename","link","getData","getAllData","err","fetchData","App","useState","view","setView","setDayData","setEventData","useEffect","eventDashboardURL","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3da2500c.chunk.js","sourcesContent":["import * as d3 from 'd3';\r\nimport { sliderBottom } from 'd3-simple-slider';\r\n\r\nexport default function BarchartRace({ dayData, eventData }) {\r\n  //remove the useless zero value out of the dataset\r\n  const data = dayData.filter((d) => d.partij !== '0');\r\n  console.log(data);\r\n  console.log(eventData);\r\n\r\n  // The data from the \"day dashboard\" maintained by FTM\r\n  let partijen = new Set(data.map((d) => d.partij));\r\n\r\n  // Unique political party names\r\n  let partijNames = d3.group(data, (d) => d.partij);\r\n\r\n  // Spending per unique date per political party\r\n  // d.midden = average cumulative value\r\n  // d.datum = date\r\n  // d.partij = political party name\r\n  const datevalues = Array.from(\r\n    d3.rollup(\r\n      data,\r\n      ([d]) => d.midden,\r\n      (d) => d.datum,\r\n      (d) => d.partij\r\n    )\r\n  )\r\n    .map(([date, data]) => [new Date(date), data])\r\n    .sort(([a], [b]) => d3.ascending(a, b));\r\n\r\n  // Display settings\r\n  //source: https://stackoverflow.com/questions/1248081/how-to-get-the-browser-viewport-dimensions\r\n  const width = Math.max(\r\n    document.documentElement.clientWidth || 0,\r\n    window.innerWidth || 0\r\n  );\r\n  const margin = { top: 16, right: 90, bottom: 65, left: 5 };\r\n  const barSize = 37;\r\n\r\n  // Maximum number of bars\r\n  const n = 13;\r\n\r\n  // Speed between dates displayed (used for keyframes)\r\n  // The higher the number, the slower the total duration of the animation\r\n  const k = 1;\r\n\r\n  // Duration between keyframes (in milliseconds)\r\n  const duration = 200;\r\n\r\n  const height = margin.top + barSize * n + margin.bottom;\r\n\r\n  // Appending SVG element to div\r\n  const svg = d3\r\n    .select('.barchartdiv')\r\n    .append('svg')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n    .attr('class', 'barchart');\r\n\r\n  // Format numbers to local (Dutch) format\r\n  // Sources: https://github.com/d3/d3-format#locale_format & https://observablehq.com/@d3/d3-format\r\n  const numLocale = d3.formatLocale({\r\n    decimal: ',',\r\n    thousands: '.',\r\n    grouping: [3],\r\n    currency: ['€', ''],\r\n  });\r\n\r\n  // Format time and dates to local (Dutch) format\r\n  // Source: https://github.com/d3/d3-time-format#locales\r\n  const timeLocale = d3.timeFormatLocale({\r\n    dateTime: '%a %b %e %X %Y',\r\n    date: '%d/%m/%Y',\r\n    time: '%H:%M:%S',\r\n    periods: ['AM', 'PM'],\r\n    days: [\r\n      'zondag',\r\n      'maandag',\r\n      'dinsdag',\r\n      'woensdag',\r\n      'donderdag',\r\n      'vrijdag',\r\n      'zaterdag',\r\n    ],\r\n    shortDays: ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],\r\n    months: [\r\n      'januari',\r\n      'februari',\r\n      'maart',\r\n      'april',\r\n      'mei',\r\n      'juni',\r\n      'juli',\r\n      'augustus',\r\n      'september',\r\n      'oktober',\r\n      'november',\r\n      'december',\r\n    ],\r\n    shortMonths: [\r\n      'jan',\r\n      'feb',\r\n      'maa',\r\n      'apr',\r\n      'mei',\r\n      'jun',\r\n      'jul',\r\n      'aug',\r\n      'sep',\r\n      'okt',\r\n      'nov',\r\n      'dec',\r\n    ],\r\n  });\r\n\r\n  // Function used to format numbers to rounded \"local\" number\r\n  const formatNumber = numLocale.format(',d');\r\n\r\n  //   console.log(formatNumber)\r\n\r\n  // Function used to format numbers to dd-mmmm-yyyy format (eg. 4 november 2020)\r\n  // %e instead of %d to get \"4\" instead of \"04\". Source: https://github.com/d3/d3-time-format#locale_format\r\n  const formatDate = timeLocale.utcFormat('%e %B %Y');\r\n\r\n  // Function used to generate a €-sign with \"local\" rounded number\r\n  function euroFormat(d) {\r\n    return '€' + numLocale.format(',d')(d);\r\n  }\r\n\r\n  // Setting X & Y scales\r\n  const x = d3.scaleLinear([0, 1], [margin.left, width - margin.right]);\r\n  const y = d3\r\n    .scaleBand()\r\n    .domain(d3.range(n + 1))\r\n    .rangeRound([margin.top, margin.top + barSize * (n + 1 + 0.1)])\r\n    .padding(0.1);\r\n\r\n  // Create a ranking for all political parties per day\r\n  // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n  function rank(value) {\r\n    const data = Array.from(partijen, (partij) => ({\r\n      partij,\r\n      midden: value(partij),\r\n    }));\r\n    data.sort((a, b) => d3.descending(a.midden, b.midden));\r\n    for (let i = 0; i < data.length; ++i) data[i].ranking = Math.min(n, i);\r\n    return data;\r\n  }\r\n\r\n  console.log(rank((name) => datevalues[0][1].get(name)));\r\n\r\n  // Creating keyframes: frames (per day) that display the ranking and spendings of political parties\r\n  // Used for animating between values\r\n  // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n  const keyframes = [];\r\n  let ka, a, kb, b;\r\n  for ([[ka, a], [kb, b]] of d3.pairs(datevalues)) {\r\n    for (let i = 0; i <= k; ++i) {\r\n      const t = i / k;\r\n      keyframes.push([\r\n        new Date(ka * (1 - t) + kb * t),\r\n        rank(\r\n          (partij) => (a.get(partij) || 0) * (1 - t) + (b.get(partij) || 0) * t\r\n        ),\r\n      ]);\r\n    }\r\n  }\r\n\r\n  // Keyframes per political party name + previous and next frames for al parties\r\n  // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n  const nameframes = d3.groups(\r\n    keyframes.flatMap(([, data]) => data),\r\n    (d) => d.partij\r\n  );\r\n  const prev = new Map(\r\n    nameframes.flatMap(([, data]) => d3.pairs(data, (a, b) => [b, a]))\r\n  );\r\n  const next = new Map(nameframes.flatMap(([, data]) => d3.pairs(data)));\r\n\r\n  //    // Appending a start/stop button, used for pausing and (re)-starting the animation\r\n  //     // Adapted from: https://medium.com/@tarsusi/make-your-own-custom-bar-chart-race-with-d3-js-b7d6cfc4d0bd\r\n  //     d3.select(\".barchartdiv\")\r\n  //         .append(\"button\")\r\n  //             .attr(\"class\", \"controls red button\")\r\n  //             .text(\"Pauzeer\")\r\n  //             .on(\"click\", function() {\r\n  //                 if (this.innerHTML === \"Pauzeer\") {\r\n  //                     this.innerHTML = \"Hervat\";\r\n  //                     stop();\r\n  //                 } else if (this.innerHTML === \"Hervat\") {\r\n  //                     this.innerHTML = \"Pauzeer\";\r\n  //                     start();\r\n  //                 } else {\r\n  //                     this.innerHTML = \"Pauzeer\";\r\n  //                     render();\r\n  //                 }\r\n  //             });\r\n\r\n  // Slider for jumping to a specific date (keyframe), using D3 simple slider plugin\r\n  // Values between 0 and last keyframe\r\n  // Sources: https://bl.ocks.org/johnwalley/e1d256b81e51da68f7feb632a53c3518 & https://github.com/johnwalley/d3-simple-slider\r\n  const sliderFrame = sliderBottom()\r\n    .min(0)\r\n    .max(keyframes.length - 1)\r\n    .width(width - 80)\r\n    .step(1)\r\n    .fill('var(--ftm-red)')\r\n    .handle(d3.symbol().type(d3.symbolCircle).size(250)())\r\n    .on('start', (val) => {\r\n      // When clicking somewhere on the slider > render bar chart race with new value\r\n      render(val);\r\n    })\r\n    .on('drag', (val) => {\r\n      // When dragging slider > stop bar chart race animation, render with new value\r\n      svg.interrupt();\r\n      render(val);\r\n    });\r\n\r\n  // Apend a new svg (for the slider) to the main bar chart div\r\n  const gFrameslider = d3\r\n    .select('.barchartdiv')\r\n    .append('svg')\r\n    .attr('width', width)\r\n    .attr('height', 20)\r\n    .attr('class', 'frameslider')\r\n    .append('g')\r\n    .attr('transform', 'translate(32,10)');\r\n\r\n  gFrameslider.call(sliderFrame);\r\n\r\n  // Coverting the date strings to real date objects (unique values), used for the timeline\r\n  const dataDates = [...new Set(data.map((d) => d.datum))].map(function (d) {\r\n    return new Date(d);\r\n  });\r\n\r\n  // Coverting the month strings to real date objects (unique values), used for the timeline tick values\r\n  const dataMonths = [...new Set(data.map((d) => d.maand))].map(function (d) {\r\n    return new Date(d);\r\n  });\r\n\r\n  // Timeline below the keyframe slider. Used D3 simple slider plugin.\r\n  // Values are dates (in stead of keyframe numbers that are used with the slider)\r\n  // Sources: https://bl.ocks.org/johnwalley/e1d256b81e51da68f7feb632a53c3518 & https://github.com/johnwalley/d3-simple-slider\r\n  const timeline = sliderBottom()\r\n    .min(d3.min(dataDates))\r\n    .max(d3.max(dataDates))\r\n    .width(width - margin.right + 30)\r\n    .tickFormat(timeLocale.utcFormat('%B'))\r\n    .tickValues(dataMonths);\r\n\r\n  // Append a new svg for the timeline within the main bar chart div.\r\n  const gTimeline = d3\r\n    .select('.barchartdiv')\r\n    .append('svg')\r\n    .attr('class', 'scaledates')\r\n    .attr('width', width)\r\n    .attr('height', 40)\r\n    .append('g')\r\n    .attr('transform', 'translate(26.5,17)');\r\n\r\n  gTimeline.call(timeline);\r\n\r\n  // Create a time scale with d3.scaleTime, used for plotting the circles on the correct dates\r\n  // Source: https://observablehq.com/@d3/d3-scaletime#scaleUtc\r\n  const xTime = d3\r\n    .scaleTime()\r\n    .domain([keyframes[0][0], keyframes[keyframes.length - 1][0]])\r\n    .range([0, width - 60]);\r\n\r\n  // Append a div to the body, used as a tooltip\r\n  const div = d3\r\n    .select('body')\r\n    .append('div')\r\n    .attr('class', 'tooltip')\r\n    .style('opacity', 0);\r\n\r\n  if (width > 400) {\r\n    // Append circles to the timeline group, using the eventData (used for displaying political events)\r\n    gTimeline\r\n      .selectAll('eventCircles')\r\n      .data(eventData)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('cx', function (d) {\r\n        const cx = xTime(new Date(d.datum));\r\n        return cx;\r\n      })\r\n      .attr('cy', '-3')\r\n      .attr('r', '10')\r\n      .attr('fill', (d) => color(d.partij))\r\n      .style('opacity', 0.8)\r\n      .on('mouseover', function (event, d) {\r\n        // On hover, display the tooltip. Source: https://bl.ocks.org/d3noob/180287b6623496dbb5ac4b048813af52\r\n        d3.select(this).style('opacity', 0.3);\r\n        div.transition().duration(200).style('opacity', 0.9);\r\n        div\r\n          .html(`${d.gebeurtenis}`)\r\n          .style('left', event.pageX - 20 + 'px')\r\n          .style('top', event.pageY - 54 + 'px');\r\n      })\r\n      .on('mouseout', function () {\r\n        d3.select(this).style('opacity', 1);\r\n        div.transition().duration(500).style('opacity', 0);\r\n      });\r\n  }\r\n\r\n  // Function used to generate the top-axis of the bar chart race, using d3.axisTop\r\n  // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n  function axis(svg) {\r\n    const g = svg.append('g').attr('transform', `translate(0,${margin.top})`);\r\n\r\n    const axis = d3\r\n      .axisTop(x)\r\n      .tickFormat(euroFormat)\r\n      .ticks(width / 160)\r\n      .tickSizeOuter(0)\r\n      .tickSizeInner(-barSize * (n + y.padding()));\r\n\r\n    return (_, transition) => {\r\n      g.transition(transition).call(axis);\r\n      g.select('.tick:first-of-type text').remove();\r\n      g.selectAll('.tick line').attr('stroke', 'white');\r\n      g.select('.domain').remove();\r\n    };\r\n  }\r\n\r\n  // Function used to display the date of the current keyframe in the right corner.\r\n  // Keyframes 0 0 is the first date\r\n  // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n  function ticker(svg) {\r\n    const displayedDate = svg\r\n      .append('text')\r\n      .attr('text-anchor', 'end')\r\n      .attr('x', width - 100)\r\n      .attr('y', margin.top + barSize * (n + 1))\r\n      .attr('dy', '0.32em')\r\n      .style('font-size', '2em')\r\n      .text(formatDate(keyframes[0][0]));\r\n\r\n    return ([date], transition) => {\r\n      transition\r\n        .end()\r\n        .then(() => displayedDate.text(formatDate(date)))\r\n        .catch(() => {});\r\n    };\r\n  }\r\n\r\n  // Function used to return the correct color for a political party\r\n  function color(party) {\r\n    let color = '';\r\n    switch (party) {\r\n      case 'D66':\r\n        color = '#b2df8a';\r\n        break;\r\n      case 'Forum voor Democratie':\r\n      case 'FvD':\r\n        color = '#9c1616';\r\n        break;\r\n      case 'VVD':\r\n        color = '#FA9600';\r\n        break;\r\n      case 'GroenLinks':\r\n        color = '#45b825';\r\n        break;\r\n      case 'CDA':\r\n        color = '#428a69';\r\n        break;\r\n      case 'PvdA':\r\n        color = '#fb9a99';\r\n        break;\r\n      case 'SP':\r\n        color = '#DD3230';\r\n        break;\r\n      case 'PvdD':\r\n        color = '#b15928';\r\n        break;\r\n      case 'SGP':\r\n        color = '#f0f026';\r\n        break;\r\n      case 'DENK':\r\n        color = '#53c5c9';\r\n        break;\r\n      case 'CU':\r\n      case 'Christen Unie':\r\n      case 'ChristenUnie':\r\n        color = '#1f78b4';\r\n        break;\r\n      case '50 Plus':\r\n      case '50Plus':\r\n        color = '#972dba';\r\n        break;\r\n      case 'PVV':\r\n        color = '#87C6C2';\r\n        break;\r\n      case 'Code Oranje':\r\n        color = '#C85716';\r\n        break;\r\n      case 'JA21':\r\n        color = '#000080';\r\n        break;\r\n      case 'Bij1':\r\n        color = '#f85080';\r\n        break;\r\n      case 'Volt':\r\n        color = '#291749';\r\n        break;\r\n      default:\r\n        color = 'var(--link-color)';\r\n        break;\r\n    }\r\n    return color;\r\n  }\r\n\r\n  function bars(svg) {\r\n    let bar = svg.append('g').selectAll('rect');\r\n\r\n    return ([, data], transition) =>\r\n      (bar = bar\r\n        .data(data.slice(0, n), (d) => d.partij)\r\n        .join(\r\n          (enter) =>\r\n            enter\r\n              .append('rect')\r\n              .attr('fill', (d) => color(d.partij))\r\n              .attr('height', y.bandwidth())\r\n              .attr('x', x(0))\r\n              .attr('y', (d) => y((prev.get(d) || d).ranking))\r\n              .attr('width', (d) => x((prev.get(d) || d).midden) - x(0)),\r\n          (update) => update,\r\n          (exit) =>\r\n            exit\r\n              .transition(transition)\r\n              .remove()\r\n              .attr('y', (d) => y((next.get(d) || d).ranking))\r\n              .attr('width', (d) => x((next.get(d) || d).midden) - x(0))\r\n        )\r\n        .call((bar) =>\r\n          bar\r\n            .transition(transition)\r\n            .attr('y', (d) => y(d.ranking))\r\n            .attr('width', (d) => x(d.midden) - x(0))\r\n        ));\r\n  }\r\n\r\n  // Function used to make text transitions possible > here for the spending per party\r\n  // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n  function textTween(a, b) {\r\n    const i = d3.interpolateNumber(a, b);\r\n    return function (t) {\r\n      this.textContent = '€' + formatNumber(i(t));\r\n    };\r\n  }\r\n\r\n  // Function used to append the labels with party names and spending values.\r\n  // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n  function labels(svg) {\r\n    let label = svg\r\n      .append('g')\r\n      .style('font', 'bold 12px var(--ftm-graph)')\r\n      .style('font-variant-numeric', 'tabular-nums')\r\n      .attr('text-anchor', 'start')\r\n      .selectAll('text');\r\n\r\n    //remove all the\r\n    d3.selectAll('.tick').selectAll('line').remove();\r\n    d3.selectAll('.tick').selectAll('text').remove();\r\n    d3.selectAll('.slider')\r\n      .selectAll('.parameter-value')\r\n      .selectAll('text')\r\n      .remove();\r\n\r\n    return ([, data], transition) =>\r\n      (label = label\r\n        .data(data.slice(0, n), (d) => d.partij)\r\n        .join(\r\n          (enter) =>\r\n            enter\r\n              .append('text')\r\n              .attr(\r\n                'transform',\r\n                (d) =>\r\n                  `translate(${x((prev.get(d) || d).midden)},${y(\r\n                    (prev.get(d) || d).ranking\r\n                  )})`\r\n              )\r\n              .attr('y', y.bandwidth() / 2)\r\n              .attr('x', 10)\r\n              .attr('dy', '-0.25em')\r\n              .text((d) => d.partij)\r\n              .call((text) =>\r\n                text\r\n                  .append('tspan')\r\n                  .attr('fill-opacity', 0.7)\r\n                  .attr('font-weight', 'normal')\r\n                  .attr('x', 10)\r\n                  .attr('dy', '1.15em')\r\n              ),\r\n          (update) => update,\r\n          (exit) =>\r\n            exit\r\n              .transition(transition)\r\n              .remove()\r\n              .attr(\r\n                'transform',\r\n                (d) =>\r\n                  `translate(${x((next.get(d) || d).midden)},${y(\r\n                    (next.get(d) || d).ranking\r\n                  )})`\r\n              )\r\n              .call((g) =>\r\n                g\r\n                  .select('tspan')\r\n                  .tween('text', (d) =>\r\n                    textTween(d.midden, (next.get(d) || d).midden)\r\n                  )\r\n              )\r\n        )\r\n        .call((bar) =>\r\n          bar\r\n            .transition(transition)\r\n            .attr(\r\n              'transform',\r\n              (d) => `translate(${x(d.midden)},${y(d.ranking)})`\r\n            )\r\n            .call((g) =>\r\n              g\r\n                .select('tspan')\r\n                .tween('text', (d) =>\r\n                  textTween((prev.get(d) || d).midden, d.midden)\r\n                )\r\n            )\r\n        ));\r\n  }\r\n\r\n  // start() stop() functions used to start and pause the animation.\r\n  // CurrentDataSetIndex registers the number of the displayed keyframe.\r\n  // Adapted from: https://medium.com/@tarsusi/make-your-own-custom-bar-chart-race-with-d3-js-b7d6cfc4d0bd\r\n  let elapsedTime = duration;\r\n  //   let currentDataSetIndex = 0;\r\n\r\n  //   function stop() {\r\n  //       console.log(\"STOP\");\r\n  //       svg.interrupt();\r\n  //   }\r\n\r\n  //   function start() {\r\n  //       render(currentDataSetIndex);\r\n  //       console.log(\"START\");\r\n  //   }\r\n\r\n  // Functions that are called to update the parts of the bar chart race.\r\n  // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n  const updateBars = bars(svg);\r\n  const updateAxis = axis(svg);\r\n  const updateLabels = labels(svg);\r\n  const updateTicker = ticker(svg);\r\n\r\n  // Call the render function to render the bar chart race, starting with the first frame.\r\n  render(0);\r\n\r\n  // Function used to render the bar chart race with a given frame number (default is 0).\r\n  // Adapted from: https://medium.com/@tarsusi/make-your-own-custom-bar-chart-race-with-d3-js-b7d6cfc4d0bd\r\n  async function render(index = 0) {\r\n    //   currentDataSetIndex = index;\r\n\r\n    const transition = svg\r\n      .transition()\r\n      .duration(elapsedTime)\r\n      .ease(d3.easeSinInOut)\r\n      .on('end', () => {\r\n        if (index < keyframes.length) {\r\n          elapsedTime = duration;\r\n          d3.select('.controls').text('Pauzeer');\r\n\r\n          // Render next frame\r\n          render(index + 1);\r\n        } else {\r\n          // If frames ended, give option to replay animation.\r\n          d3.select('.controls').text('Afspelen');\r\n        }\r\n      })\r\n      .on('interrupt', () => {\r\n        console.log('INTERRUPTED');\r\n      });\r\n\r\n    // Execute the functions that are used to update the bar chart race.\r\n    if (index < keyframes.length) {\r\n      sliderFrame.value(index);\r\n      x.domain([0, keyframes[index][1][0].midden]);\r\n      updateTicker(keyframes[index], transition);\r\n      updateAxis(keyframes[index], transition);\r\n      updateBars(keyframes[index], transition);\r\n      updateLabels(keyframes[index], transition);\r\n    }\r\n\r\n    // Wait for the transition to end.\r\n    // Catch promise error, generated when animation is interrupted.\r\n    // Source: https://stackoverflow.com/questions/37624322/uncaught-in-promise-undefined-error-when-using-with-location-in-facebook-gra\r\n    await transition\r\n      .end()\r\n      .then(() => {})\r\n      .catch(() => {});\r\n  }\r\n  // }\r\n  // createBarChart()\r\n\r\n  return <div className=\"barchartdiv\" width=\"100%\"></div>;\r\n}\r\n","import React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst Loading = props => {\r\n  return (\r\n    <ContentLoader width={200} height={200} viewBox=\"0 0 200 200\" {...props}>\r\n      <rect y=\"30\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"40\" />\r\n      <rect y=\"60\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"55\" />\r\n      <rect y=\"90\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"74\" />\r\n      <rect y=\"120\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"120\" />\r\n      <rect y=\"150\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"58\" />\r\n    </ContentLoader>\r\n  )\r\n}\r\n\r\nLoading.metadata = {\r\n  name: 'Phuong Dao',\r\n  github: 'dao-phuong',\r\n  description: 'Bar Chart',\r\n  filename: 'BarChart',\r\n}\r\n\r\nexport default Loading","import * as d3 from \"d3\"\r\n\r\nasync function fetchData(link){\r\n    async function getData(name){\r\n        const data = await d3.csv(name)\r\n        return data\r\n    }\r\n\r\n    async function getAllData() {\r\n        const data = await getData(link)\r\n\r\n        return data\r\n    }\r\n\r\n    return getAllData().catch((err) => {\r\n        console.log(err)\r\n    });\r\n\r\n} \r\n\r\nexport default fetchData","import React, { useEffect, useState} from 'react'\r\n\r\nimport BarchartRace from './components/BarchartRace'\r\nimport Loading from './components/Loading'\r\nimport fetchData from './helper/data'\r\n\r\nfunction App() {\r\n  \r\n  const [view, setView] = useState('loading');\r\n\r\n  const [dayData, setDayData] = useState(null);\r\n  const [eventData, setEventData] = useState(null);\r\n\r\n  useEffect(() => {\r\n\r\n    async function getData(){\r\n      const daySpendDataURL = \"https://docs.google.com/spreadsheets/d/1zBQlY4VlalwP2sXshquH8zwrWmLfS5F0K5cF8RJKyNU/export?format=csv\"\r\n      const eventDashboardURL = \"https://docs.google.com/spreadsheets/d/1UkvW4wmthdvaaWvvJS_R5CUiCJZXz6fPDlIKE3ulmjM/export?format=csv\"\r\n      await setDayData(await fetchData(daySpendDataURL))\r\n      await setEventData(await fetchData(eventDashboardURL))\r\n      await setView('barchart')\r\n    }\r\n    getData()\r\n  }, [])\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      {view == 'loading' && <Loading  />}\r\n      {view == 'barchart' && <BarchartRace dayData={dayData} eventData={eventData} />}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}