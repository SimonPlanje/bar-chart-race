{"version":3,"sources":["components/BarchartRace.js","components/Loading.js","helper/data.js","App.js","reportWebVitals.js","index.js"],"names":["BarchartRace","data","eventData","d3","selectAll","remove","useEffect","filter","d","partij","partijen","Set","map","datevalues","Array","from","midden","datum","date","Date","sort","a","b","width","Math","max","document","documentElement","clientWidth","window","innerWidth","margin","n","duration","height","barSize","svg","append","attr","numLocale","decimal","thousands","grouping","currency","timeLocale","dateTime","time","periods","days","shortDays","months","shortMonths","formatNumber","format","formatDate","utcFormat","euroFormat","x","y","domain","rangeRound","padding","rank","value","i","length","ranking","min","ka","kb","keyframes","t","push","get","nameframes","flatMap","prev","Map","next","sliderFrame","sliderBottom","step","fill","handle","type","size","on","val","render","interrupt","call","dataDates","dataMonths","maand","timeline","tickFormat","tickValues","gTimeline","xTime","range","div","style","color","party","textTween","this","textContent","enter","event","transition","html","gebeurtenis","pageX","pageY","elapsedTime","updateBars","bar","slice","join","bandwidth","update","exit","bars","updateAxis","g","axis","ticks","tickSizeOuter","tickSizeInner","_","select","updateLabels","label","text","tween","labels","updateTicker","displayedDate","end","then","catch","ticker","index","ease","console","log","className","Loading","props","viewBox","rx","ry","metadata","name","github","description","filename","link","getData","getAllData","err","fetchData","App","state","view","dayData","urlParams","URLSearchParams","location","search","version","daySpendDataURL","eventDashboardURL","setState","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a8501f98.chunk.js","sourcesContent":["import * as d3 from 'd3';\r\nimport { sliderBottom } from 'd3-simple-slider';\r\nimport React, { useEffect} from 'react'\r\n\r\nexport default function BarchartRace({ data, eventData }) {\r\n  d3.select('.barchartdiv').selectAll('svg').remove()\r\n\r\n  useEffect(() => {\r\n    //remove the useless zero value out of the dataset\r\n    data = data.filter((d) => d.partij !== '0');\r\n    // console.log(data);\r\n    // console.log(eventData);\r\n\r\n    // The data from the \"day dashboard\" maintained by FTM\r\n    let partijen = new Set(data.map((d) => d.partij));\r\n    // Unique political party names\r\n    let partijNames = d3.group(data, (d) => d.partij);\r\n\r\n    // Spending per unique date per political party\r\n    // d.midden = average cumulative value\r\n    // d.datum = date\r\n    // d.partij = political party name\r\n    const datevalues = Array.from(\r\n      d3.rollup(\r\n        data,\r\n        ([d]) => d.midden,\r\n        (d) => d.datum,\r\n        (d) => d.partij\r\n      )\r\n    )\r\n      .map(([date, data]) => [new Date(date), data])\r\n      .sort(([a], [b]) => d3.ascending(a, b));\r\n\r\n    // Display settings\r\n    //source: https://stackoverflow.com/questions/1248081/how-to-get-the-browser-viewport-dimensions\r\n    const width = Math.max(\r\n      document.documentElement.clientWidth || 0,\r\n      window.innerWidth || 0\r\n    );\r\n    const margin = { top: 16, right: 100, bottom: 65, left: 5 };\r\n    const barSize = 37;\r\n\r\n    // Maximum number of bars\r\n    const n = 13;\r\n\r\n    // Speed between dates displayed (used for keyframes)\r\n    // The higher the number, the slower the total duration of the animation\r\n    const k = 1;\r\n\r\n    // Duration between keyframes (in milliseconds)\r\n    const duration = 200;\r\n\r\n    const height = margin.top + barSize * n + margin.bottom;\r\n\r\n    // Appending SVG element to div\r\n    const svg = d3\r\n      .select('.barchartdiv')\r\n      .append('svg')\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .attr('class', 'barchart');\r\n\r\n    // Format numbers to local (Dutch) format\r\n    // Sources: https://github.com/d3/d3-format#locale_format & https://observablehq.com/@d3/d3-format\r\n    const numLocale = d3.formatLocale({\r\n      decimal: ',',\r\n      thousands: '.',\r\n      grouping: [3],\r\n      currency: ['€', ''],\r\n    });\r\n\r\n    // Format time and dates to local (Dutch) format\r\n    // Source: https://github.com/d3/d3-time-format#locales\r\n    const timeLocale = d3.timeFormatLocale({\r\n      dateTime: '%a %b %e %X %Y',\r\n      date: '%d/%m/%Y',\r\n      time: '%H:%M:%S',\r\n      periods: ['AM', 'PM'],\r\n      days: [\r\n        'zondag',\r\n        'maandag',\r\n        'dinsdag',\r\n        'woensdag',\r\n        'donderdag',\r\n        'vrijdag',\r\n        'zaterdag',\r\n      ],\r\n      shortDays: ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],\r\n      months: [\r\n        'januari',\r\n        'februari',\r\n        'maart',\r\n        'april',\r\n        'mei',\r\n        'juni',\r\n        'juli',\r\n        'augustus',\r\n        'september',\r\n        'oktober',\r\n        'november',\r\n        'december',\r\n      ],\r\n      shortMonths: [\r\n        'jan',\r\n        'feb',\r\n        'maa',\r\n        'apr',\r\n        'mei',\r\n        'jun',\r\n        'jul',\r\n        'aug',\r\n        'sep',\r\n        'okt',\r\n        'nov',\r\n        'dec',\r\n      ],\r\n    });\r\n\r\n    // Function used to format numbers to rounded \"local\" number\r\n    const formatNumber = numLocale.format(',d');\r\n\r\n    //   console.log(formatNumber)\r\n\r\n    // Function used to format numbers to dd-mmmm-yyyy format (eg. 4 november 2020)\r\n    // %e instead of %d to get \"4\" instead of \"04\". Source: https://github.com/d3/d3-time-format#locale_format\r\n    const formatDate = timeLocale.utcFormat('%e %B %Y');\r\n\r\n    // Function used to generate a €-sign with \"local\" rounded number\r\n    function euroFormat(d) {\r\n      return '€' + numLocale.format(',d')(d);\r\n    }\r\n\r\n    // Setting X & Y scales\r\n    const x = d3.scaleLinear([0, 1], [margin.left, width - margin.right]);\r\n    const y = d3\r\n      .scaleBand()\r\n      .domain(d3.range(n + 1))\r\n      .rangeRound([margin.top, margin.top + barSize * (n + 1 + 0.1)])\r\n      .padding(0.1);\r\n\r\n    // Create a ranking for all political parties per day\r\n    // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n    function rank(value) {\r\n      const data = Array.from(partijen, (partij) => ({\r\n        partij,\r\n        midden: value(partij),\r\n      }));\r\n      data.sort((a, b) => d3.descending(a.midden, b.midden));\r\n      for (let i = 0; i < data.length; ++i) data[i].ranking = Math.min(n, i);\r\n      return data;\r\n    }\r\n\r\n    // console.log(rank((name) => datevalues[0][1].get(name)));\r\n\r\n    // Creating keyframes: frames (per day) that display the ranking and spendings of political parties\r\n    // Used for animating between values\r\n    // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n    const keyframes = [];\r\n    let ka, a, kb, b;\r\n    for ([[ka, a], [kb, b]] of d3.pairs(datevalues)) {\r\n      for (let i = 0; i <= k; ++i) {\r\n        const t = i / k;\r\n        keyframes.push([\r\n          new Date(ka * (1 - t) + kb * t),\r\n          rank(\r\n            (partij) => (a.get(partij) || 0) * (1 - t) + (b.get(partij) || 0) * t\r\n          ),\r\n        ]);\r\n      }\r\n    }\r\n\r\n    // Keyframes per political party name + previous and next frames for al parties\r\n    // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n    const nameframes = d3.groups(\r\n      keyframes.flatMap(([, data]) => data),\r\n      (d) => d.partij\r\n    );\r\n    const prev = new Map(\r\n      nameframes.flatMap(([, data]) => d3.pairs(data, (a, b) => [b, a]))\r\n    );\r\n    const next = new Map(nameframes.flatMap(([, data]) => d3.pairs(data)));\r\n\r\n    //    // Appending a start/stop button, used for pausing and (re)-starting the animation\r\n    //     // Adapted from: https://medium.com/@tarsusi/make-your-own-custom-bar-chart-race-with-d3-js-b7d6cfc4d0bd\r\n    //     d3.select(\".barchartdiv\")\r\n    //         .append(\"button\")\r\n    //             .attr(\"class\", \"controls red button\")\r\n    //             .text(\"Pauzeer\")\r\n    //             .on(\"click\", function() {\r\n    //                 if (this.innerHTML === \"Pauzeer\") {\r\n    //                     this.innerHTML = \"Hervat\";\r\n    //                     stop();\r\n    //                 } else if (this.innerHTML === \"Hervat\") {\r\n    //                     this.innerHTML = \"Pauzeer\";\r\n    //                     start();\r\n    //                 } else {\r\n    //                     this.innerHTML = \"Pauzeer\";\r\n    //                     render();\r\n    //                 }\r\n    //             });\r\n\r\n    // Slider for jumping to a specific date (keyframe), using D3 simple slider plugin\r\n    // Values between 0 and last keyframe\r\n    // Sources: https://bl.ocks.org/johnwalley/e1d256b81e51da68f7feb632a53c3518 & https://github.com/johnwalley/d3-simple-slider\r\n    const sliderFrame = sliderBottom()\r\n      .min(0)\r\n      .max(keyframes.length - 1)\r\n      .width(width - 80)\r\n      .step(1)\r\n      .fill('var(--ftm-red)')\r\n      .handle(d3.symbol().type(d3.symbolCircle).size(250)())\r\n      .on('start', (val) => {\r\n        // When clicking somewhere on the slider > render bar chart race with new value\r\n        render(val);\r\n      })\r\n      .on('drag', (val) => {\r\n        // When dragging slider > stop bar chart race animation, render with new value\r\n        svg.interrupt();\r\n        render(val);\r\n      });\r\n\r\n    // Apend a new svg (for the slider) to the main bar chart div\r\n    const gFrameslider = d3\r\n      .select('.barchartdiv')\r\n      .append('svg')\r\n      .attr('width', width)\r\n      .attr('height', 20)\r\n      .attr('class', 'frameslider')\r\n      .append('g')\r\n      .attr('transform', 'translate(32,10)');\r\n\r\n    gFrameslider.call(sliderFrame);\r\n\r\n    // Coverting the date strings to real date objects (unique values), used for the timeline\r\n    const dataDates = [...new Set(data.map((d) => d.datum))].map(function (d) {\r\n      return new Date(d);\r\n    });\r\n\r\n    // Coverting the month strings to real date objects (unique values), used for the timeline tick values\r\n    const dataMonths = [...new Set(data.map((d) => d.maand))].map(function (d) {\r\n      return new Date(d);\r\n    });\r\n\r\n    // Timeline below the keyframe slider. Used D3 simple slider plugin.\r\n    // Values are dates (in stead of keyframe numbers that are used with the slider)\r\n    // Sources: https://bl.ocks.org/johnwalley/e1d256b81e51da68f7feb632a53c3518 & https://github.com/johnwalley/d3-simple-slider\r\n    const timeline = sliderBottom()\r\n      .min(d3.min(dataDates))\r\n      .max(d3.max(dataDates))\r\n      .width(width - margin.right + 30)\r\n      .tickFormat(timeLocale.utcFormat('%B'))\r\n      .tickValues(dataMonths);\r\n\r\n    // Append a new svg for the timeline within the main bar chart div.\r\n    const gTimeline = d3\r\n      .select('.barchartdiv')\r\n      .append('svg')\r\n      .attr('class', 'scaledates')\r\n      .attr('width', width)\r\n      .attr('height', 40)\r\n      .append('g')\r\n      .attr('transform', 'translate(26.5,17)');\r\n\r\n    gTimeline.call(timeline);\r\n\r\n    // Create a time scale with d3.scaleTime, used for plotting the circles on the correct dates\r\n    // Source: https://observablehq.com/@d3/d3-scaletime#scaleUtc\r\n    const xTime = d3\r\n      .scaleTime()\r\n      .domain([keyframes[0][0], keyframes[keyframes.length - 1][0]])\r\n      .range([0, width - 60]);\r\n\r\n    // Append a div to the body, used as a tooltip\r\n    const div = d3\r\n      .select('body')\r\n      .append('div')\r\n      .attr('class', 'tooltip')\r\n      .style('opacity', 0);\r\n\r\n    if (width > 400) {\r\n      // Append circles to the timeline group, using the eventData (used for displaying political events)\r\n      gTimeline\r\n        .selectAll('eventCircles')\r\n        .data(eventData)\r\n        .enter()\r\n        .append('circle')\r\n        .attr('cx', function (d) {\r\n          const cx = xTime(new Date(d.datum));\r\n          return cx;\r\n        })\r\n        .attr('cy', '-3')\r\n        .attr('r', '10')\r\n        .attr('fill', (d) => color(d.partij))\r\n        .style('opacity', 0.8)\r\n        .on('mouseover', function (event, d) {\r\n          // On hover, display the tooltip. Source: https://bl.ocks.org/d3noob/180287b6623496dbb5ac4b048813af52\r\n          d3.select(this).style('opacity', 0.3);\r\n          div.transition().duration(200).style('opacity', 0.9);\r\n          div\r\n            .html(`${d.gebeurtenis}`)\r\n            .style('left', event.pageX - 20 + 'px')\r\n            .style('top', event.pageY - 54 + 'px');\r\n        })\r\n        .on('mouseout', function () {\r\n          d3.select(this).style('opacity', 1);\r\n          div.transition().duration(500).style('opacity', 0);\r\n        });\r\n    }\r\n\r\n    // Function used to generate the top-axis of the bar chart race, using d3.axisTop\r\n    // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n    function axis(svg) {\r\n      const g = svg.append('g').attr('transform', `translate(0,${margin.top})`);\r\n\r\n      const axis = d3\r\n        .axisTop(x)\r\n        .tickFormat(euroFormat)\r\n        .ticks(width / 160)\r\n        .tickSizeOuter(0)\r\n        .tickSizeInner(-barSize * (n + y.padding()));\r\n\r\n      return (_, transition) => {\r\n        g.transition(transition).call(axis);\r\n        g.select('.tick:first-of-type text').remove();\r\n        g.selectAll('.tick line').attr('stroke', 'white');\r\n        g.select('.domain').remove();\r\n      };\r\n    }\r\n\r\n    // Function used to display the date of the current keyframe in the right corner.\r\n    // Keyframes 0 0 is the first date\r\n    // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n    function ticker(svg) {\r\n      const displayedDate = svg\r\n        .append('text')\r\n        .attr('text-anchor', 'end')\r\n        .attr('x', width - 100)\r\n        .attr('y', margin.top + barSize * (n + 1))\r\n        .attr('dy', '0.32em')\r\n        .style('font-size', '2em')\r\n        .text(formatDate(keyframes[0][0]));\r\n\r\n      return ([date], transition) => {\r\n        transition\r\n          .end()\r\n          .then(() => displayedDate.text(formatDate(date)))\r\n          .catch(() => {});\r\n      };\r\n    }\r\n\r\n    // Function used to return the correct color for a political party\r\n    function color(party) {\r\n      let color = '';\r\n      switch (party) {\r\n        case 'D66':\r\n          color = '#b2df8a';\r\n          break;\r\n        case 'Forum voor Democratie':\r\n        case 'FvD':\r\n        case 'Thierry Baudet':\r\n          color = '#9c1616';\r\n          break;\r\n        case 'VVD':\r\n        case 'Klaas Dijkhoff':\r\n        case 'Silvio Erkens':\r\n          color = '#FA9600';\r\n          break;\r\n        case 'GroenLinks':\r\n        case 'Bas Eickhout':\r\n        case 'Jesse Klaver':  \r\n          color = '#45b825';\r\n          break;\r\n        case 'CDA':\r\n        case 'Agnes Mulder':\r\n        case 'Chris van Dam':\r\n        case  'Harmen Krul':\r\n        case 'Harry van der Molen':\r\n        case 'Henri Bontenbal':\r\n        case 'Jaco Geurts':\r\n        case 'Lucille Werner':\r\n        case  'Martijn van Helvert':\r\n        case 'Mustafa Amhaouch':\r\n        case 'Raymond Knops':\r\n        case 'René Peters':\r\n        case 'Wopke Hoekstra':\r\n          color = '#428a69';\r\n          break;\r\n        case 'PvdA':\r\n          color = '#fb9a99';\r\n          break;\r\n        case 'SP':\r\n        case 'Lilian Marijnissen':\r\n          color = '#DD3230';\r\n          break;\r\n        case 'PvdD':\r\n          color = '#b15928';\r\n          break;\r\n        case 'SGP':\r\n          color = '#f0f026';\r\n          break;\r\n        case 'DENK':\r\n          color = '#53c5c9';\r\n          break;\r\n        case 'CU':\r\n        case 'Christen Unie':\r\n        case 'ChristenUnie':\r\n        case 'Gert-Jan Segers':\r\n          color = '#1f78b4';\r\n          break;\r\n        case '50 Plus':\r\n        case '50Plus':\r\n          color = '#972dba';\r\n          break;\r\n        case 'PVV':\r\n          color = '#87C6C2';\r\n          break;\r\n        case 'Code Oranje':\r\n          color = '#C85716';\r\n          break;\r\n        case 'JA21':\r\n        case 'Jan Cees Vogelaar':\r\n          color = '#000080';\r\n          break;\r\n        case 'Bij1':\r\n          color = '#f85080';\r\n          break;\r\n        case 'Volt':\r\n          color = '#291749';\r\n          break;\r\n        default:\r\n          color = 'var(--link-color)';\r\n          break;\r\n      }\r\n      return color;\r\n    }\r\n\r\n    function bars(svg) {\r\n      let bar = svg.append('g').selectAll('rect');\r\n\r\n      return ([, data], transition) =>\r\n        (bar = bar\r\n          .data(data.slice(0, n), (d) => d.partij)\r\n          .join(\r\n            (enter) =>\r\n              enter\r\n                .append('rect')\r\n                .attr('fill', (d) => color(d.partij))\r\n                .attr('height', y.bandwidth())\r\n                .attr('x', margin.left)\r\n                .attr('y', (d) => y((prev.get(d) || d).ranking))\r\n                .attr('width', (d) => x((prev.get(d) || d).midden) - x(0)),\r\n            (update) => update,\r\n            (exit) =>\r\n              exit\r\n                .transition(transition)\r\n                .remove()\r\n                .attr('y', (d) => y((next.get(d) || d).ranking))\r\n                .attr('width', (d) => x((next.get(d) || d).midden) - x(0))\r\n          )\r\n          .call((bar) =>\r\n            bar\r\n              .transition(transition)\r\n              .attr('y', (d) => y(d.ranking))\r\n              .attr('width', (d) => x(d.midden) - x(0))\r\n          ));\r\n    }\r\n\r\n    // Function used to make text transitions possible > here for the spending per party\r\n    // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n    function textTween(a, b) {\r\n      const i = d3.interpolateNumber(a, b);\r\n      return function (t) {\r\n        this.textContent = '€' + formatNumber(i(t));\r\n      };\r\n    }\r\n\r\n    // Function used to append the labels with party names and spending values.\r\n    // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n    function labels(svg) {\r\n      let label = svg\r\n        .append('g')\r\n        .style('font', 'bold 12px var(--ftm-graph)')\r\n        .style('font-variant-numeric', 'tabular-nums')\r\n        .attr('text-anchor', 'start')\r\n        .selectAll('text');\r\n\r\n      //remove all the\r\n      d3.selectAll('.tick').selectAll('line').remove();\r\n      d3.selectAll('.tick').selectAll('text').remove();\r\n      d3.selectAll('.slider')\r\n        .selectAll('.parameter-value')\r\n        .selectAll('text')\r\n        .remove();\r\n\r\n      return ([, data], transition) =>\r\n        (label = label\r\n          .data(data.slice(0, n), (d) => d.partij)\r\n          .join(\r\n            (enter) =>\r\n              enter\r\n                .append('text')\r\n                .attr(\r\n                  'transform',\r\n                  (d) =>\r\n                    `translate(${x((prev.get(d) || d).midden)},${y(\r\n                      (prev.get(d) || d).ranking\r\n                    )})`\r\n                )\r\n                .attr('y', y.bandwidth() / 2)\r\n                .attr('x', 10)\r\n                .attr('dy', '-0.25em')\r\n                .text((d) => d.partij)\r\n                .call((text) =>\r\n                  text\r\n                    .append('tspan')\r\n                    .attr('fill-opacity', 0.7)\r\n                    .attr('font-weight', 'normal')\r\n                    .attr('x', 10)\r\n                    .attr('dy', '1.15em')\r\n                ),\r\n            (update) => update,\r\n            (exit) =>\r\n              exit\r\n                .transition(transition)\r\n                .remove()\r\n                .attr(\r\n                  'transform',\r\n                  (d) =>\r\n                    `translate(${x((next.get(d) || d).midden)},${y(\r\n                      (next.get(d) || d).ranking\r\n                    )})`\r\n                )\r\n                .call((g) =>\r\n                  g\r\n                    .select('tspan')\r\n                    .tween('text', (d) =>\r\n                      textTween(d.midden, (next.get(d) || d).midden)\r\n                    )\r\n                )\r\n          )\r\n          .call((bar) =>\r\n            bar\r\n              .transition(transition)\r\n              .attr(\r\n                'transform',\r\n                (d) => `translate(${x(d.midden)},${y(d.ranking)})`\r\n              )\r\n              .call((g) =>\r\n                g\r\n                  .select('tspan')\r\n                  .tween('text', (d) =>\r\n                    textTween((prev.get(d) || d).midden, d.midden)\r\n                  )\r\n              )\r\n          ));\r\n    }\r\n\r\n    // start() stop() functions used to start and pause the animation.\r\n    // CurrentDataSetIndex registers the number of the displayed keyframe.\r\n    // Adapted from: https://medium.com/@tarsusi/make-your-own-custom-bar-chart-race-with-d3-js-b7d6cfc4d0bd\r\n    let elapsedTime = duration;\r\n    //   let currentDataSetIndex = 0;\r\n\r\n    //   function stop() {\r\n    //       console.log(\"STOP\");\r\n    //       svg.interrupt();\r\n    //   }\r\n\r\n    //   function start() {\r\n    //       render(currentDataSetIndex);\r\n    //       console.log(\"START\");\r\n    //   }\r\n\r\n    // Functions that are called to update the parts of the bar chart race.\r\n    // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n    const updateBars = bars(svg);\r\n    const updateAxis = axis(svg);\r\n    const updateLabels = labels(svg);\r\n    const updateTicker = ticker(svg);\r\n\r\n    // Call the render function to render the bar chart race, starting with the first frame.\r\n    render(0);\r\n\r\n    // Function used to render the bar chart race with a given frame number (default is 0).\r\n    // Adapted from: https://medium.com/@tarsusi/make-your-own-custom-bar-chart-race-with-d3-js-b7d6cfc4d0bd\r\n    async function render(index = 0) {\r\n      //   currentDataSetIndex = index;\r\n      \r\n      const transition = svg\r\n        .transition()\r\n        .duration(elapsedTime)\r\n        .ease(d3.easeSinInOut)\r\n        .on('end', () => {\r\n          if (index < keyframes.length) {\r\n            elapsedTime = duration;\r\n            d3.select('.controls').text('Pauzeer');\r\n\r\n            // Render next frame\r\n            render(index + 1);\r\n          } else {\r\n            // If frames ended, give option to replay animation.\r\n            d3.select('.controls').text('Afspelen');\r\n          }\r\n        })\r\n        .on('interrupt', () => {\r\n          console.log('INTERRUPTED');\r\n        });\r\n\r\n      // Execute the functions that are used to update the bar chart race.\r\n      if (index < keyframes.length) {\r\n        sliderFrame.value(index);\r\n        x.domain([0, keyframes[index][1][0].midden]);\r\n        updateTicker(keyframes[index], transition);\r\n        updateAxis(keyframes[index], transition);\r\n        updateBars(keyframes[index], transition);\r\n        updateLabels(keyframes[index], transition);\r\n      }\r\n\r\n      // Wait for the transition to end.\r\n      // Catch promise error, generated when animation is interrupted.\r\n      // Source: https://stackoverflow.com/questions/37624322/uncaught-in-promise-undefined-error-when-using-with-location-in-facebook-gra\r\n      await transition\r\n        .end()\r\n        .then(() => {})\r\n        .catch(() => {});\r\n    }\r\n  }, [])\r\n\r\n  return <div className=\"barchartdiv\" width=\"100%\"></div>;\r\n}\r\n","import React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst Loading = props => {\r\n  return (\r\n    <ContentLoader width={200} height={200} viewBox=\"0 0 200 200\" {...props}>\r\n      <rect y=\"30\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"40\" />\r\n      <rect y=\"60\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"55\" />\r\n      <rect y=\"90\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"74\" />\r\n      <rect y=\"120\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"120\" />\r\n      <rect y=\"150\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"58\" />\r\n    </ContentLoader>\r\n  )\r\n}\r\n\r\nLoading.metadata = {\r\n  name: 'Phuong Dao',\r\n  github: 'dao-phuong',\r\n  description: 'Bar Chart',\r\n  filename: 'BarChart',\r\n}\r\n\r\nexport default Loading","import * as d3 from \"d3\"\r\n\r\nasync function fetchData(link){\r\n    async function getData(name){\r\n        const data = await d3.csv(name)\r\n        return data\r\n    }\r\n\r\n    async function getAllData() {\r\n        const data = await getData(link)\r\n\r\n        return data\r\n    }\r\n\r\n    return getAllData().catch((err) => {\r\n        console.log(err)\r\n    });\r\n\r\n} \r\n\r\nexport default fetchData","import React, { Component } from 'react'\r\n\r\nimport BarchartRace from './components/BarchartRace'\r\nimport Loading from './components/Loading'\r\nimport fetchData from './helper/data'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      view: 'loading',\r\n      dayData: null,\r\n      eventData: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n  \r\n  async getData(){\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const version = urlParams.get('version');\r\n    \r\n    let daySpendDataURL = \"https://docs.google.com/spreadsheets/d/1kILuuFuU5wvWVeHS4juy_pkfdwRB-O6kYe1LwwofI8Q/export?format=csv\"\r\n    if (version === 'person') {\r\n      daySpendDataURL = \"https://docs.google.com/spreadsheets/d/1J4ivHKK5Ttj0-3ME1KQPt4wVwlkrfGkenyEhlo1OnOg/export?format=csv\"\r\n    }else if(version === 'personstatic'){\r\n      daySpendDataURL = 'https://docs.google.com/spreadsheets/d/1B_qKfhHgFp96MpAuwQA_XHmEVYi22WE2RLKYIpnQFVA/export?format=csv'\r\n    }else if(version === 'static'){\r\n      daySpendDataURL = 'https://docs.google.com/spreadsheets/d/1zBQlY4VlalwP2sXshquH8zwrWmLfS5F0K5cF8RJKyNU/export?format=csv'\r\n    }\r\n    \r\n    const eventDashboardURL = \"https://docs.google.com/spreadsheets/d/1UkvW4wmthdvaaWvvJS_R5CUiCJZXz6fPDlIKE3ulmjM/export?format=csv\"\r\n    this.setState({\r\n      dayData: await fetchData(daySpendDataURL),\r\n      eventData: await fetchData(eventDashboardURL),\r\n      view: 'barchart'\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    if (this.state.view === 'loading') {\r\n      return (<div className=\"App\"><Loading /></div>);\r\n    } else {\r\n      return (<div className=\"App\"><BarchartRace data={this.state.dayData} eventData={this.state.eventData} /></div>);\r\n      \r\n    }\r\n   }\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}