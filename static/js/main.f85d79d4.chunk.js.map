{"version":3,"sources":["components/BarchartRace.js","components/Loading.js","helper/data.js","App.js","reportWebVitals.js","index.js"],"names":["BarchartRace","euroFormat","rank","a","axis","ticker","color","bars","textTween","labels","render","index","transition","svg","duration","elapsedTime","ease","d3","on","keyframes","length","text","console","log","sliderFrame","value","x","domain","midden","updateTicker","updateAxis","updateBars","updateLabels","end","then","catch","label","append","style","attr","selectAll","remove","data","slice","n","d","partij","join","enter","prev","get","y","ranking","bandwidth","call","update","exit","next","g","select","tween","bar","b","i","t","this","textContent","formatNumber","party","displayedDate","width","margin","top","barSize","formatDate","date","tickFormat","ticks","tickSizeOuter","tickSizeInner","padding","_","Array","from","partijen","sort","Math","min","numLocale","format","importedData","JSON","parse","localStorage","getItem","filter","eventData","Set","map","datevalues","datum","Date","max","document","documentElement","clientWidth","window","innerWidth","height","right","bottom","left","timeLocale","utcFormat","rangeRound","name","ka","kb","push","nameframes","flatMap","Map","sliderBottom","step","fill","handle","type","size","val","interrupt","dataDates","dataMonths","maand","timeline","tickValues","gTimeline","xTime","range","div","event","html","gebeurtenis","pageX","pageY","createBarChart","className","Loading","props","viewBox","rx","ry","metadata","github","description","filename","setDataState","getData","daySpendDataURL","dayData","eventDashboardURL","setItem","stringify","getAllData","err","fetchData","App","useState","dataState","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f85d79d4.chunk.js","sourcesContent":["import * as d3 from \"d3\"\r\nimport {sliderBottom} from \"d3-simple-slider\"\r\n\r\nfunction BarchartRace() {\r\n\r\n    async function createBarChart(){\r\n\r\n        const importedData = JSON.parse(localStorage.getItem('data'))\r\n        //remove the useless zero value out of the dataset\r\n        const data = importedData.filter(d => d.partij !== '0')\r\n\r\n        const eventData = await JSON.parse(localStorage.getItem('eventData'))\r\n\r\n\r\n        console.log(data)\r\n\r\n      // The data from the \"day dashboard\" maintained by FTM\r\n      let partijen = new Set(data.map(d => d.partij))\r\n      console.log(partijen)\r\n\r\n\r\n      // Unique political party names\r\n      let partijNames = d3.group(data, d => d.partij)\r\n\r\n\r\n    // Spending per unique date per political party\r\n    // d.midden = average cumulative value\r\n    // d.datum = date\r\n    // d.partij = political party name\r\n    const datevalues = Array.from(d3.rollup(data, ([d]) => d.midden, d => d.datum, d => d.partij))\r\n    .map(([date, data]) => [new Date(date), data])\r\n    .sort(([a], [b]) => d3.ascending(a, b));\r\n\r\n\r\n    // Display settings\r\n    //source: https://stackoverflow.com/questions/1248081/how-to-get-the-browser-viewport-dimensions\r\n    const width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\r\n    const margin = ({top: 16, right: 90, bottom: 65, left: 5})\r\n    const barSize = 37\r\n\r\n \r\n    // Maximum number of bars\r\n    const n = 13\r\n\r\n    // Speed between dates displayed (used for keyframes)\r\n    // The higher the number, the slower the total duration of the animation\r\n    const k = 1\r\n\r\n    // Duration between keyframes (in milliseconds)\r\n    const duration = 200\r\n\r\n    const height = margin.top + barSize * n + margin.bottom\r\n\r\n      // Appending SVG element to div\r\n      const svg = d3.select(\".barchartdiv\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .attr('class', 'barchart')\r\n\r\n\r\n    // Format numbers to local (Dutch) format \r\n    // Sources: https://github.com/d3/d3-format#locale_format & https://observablehq.com/@d3/d3-format\r\n    const numLocale = d3.formatLocale({\r\n      \"decimal\": \",\",\r\n      \"thousands\": \".\",\r\n      \"grouping\": [3],\r\n      \"currency\": [\"€\", \"\"]\r\n  })\r\n\r\n  // Format time and dates to local (Dutch) format\r\n  // Source: https://github.com/d3/d3-time-format#locales\r\n  const timeLocale = d3.timeFormatLocale({\r\n      \"dateTime\": \"%a %b %e %X %Y\",\r\n      \"date\": \"%d/%m/%Y\",\r\n      \"time\": \"%H:%M:%S\",\r\n      \"periods\": [\"AM\", \"PM\"],\r\n      \"days\": [\"zondag\", \"maandag\", \"dinsdag\", \"woensdag\", \"donderdag\", \"vrijdag\", \"zaterdag\"],\r\n      \"shortDays\": [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\r\n      \"months\": [\"januari\", \"februari\", \"maart\", \"april\", \"mei\", \"juni\", \"juli\", \"augustus\", \"september\", \"oktober\", \"november\", \"december\"],\r\n      \"shortMonths\": [\"jan\", \"feb\", \"maa\", \"apr\", \"mei\", \"jun\", \"jul\", \"aug\", \"sep\", \"okt\", \"nov\", \"dec\"]\r\n  })\r\n\r\n  // Function used to format numbers to rounded \"local\" number\r\n  const formatNumber = numLocale.format(\",d\")\r\n\r\n  console.log(formatNumber)\r\n\r\n  // Function used to format numbers to dd-mmmm-yyyy format (eg. 4 november 2020)\r\n  // %e instead of %d to get \"4\" instead of \"04\". Source: https://github.com/d3/d3-time-format#locale_format\r\n  const formatDate = timeLocale.utcFormat(\"%e %B %Y\")\r\n\r\n  // Function used to generate a €-sign with \"local\" rounded number\r\n  function euroFormat(d) { return '€' + numLocale.format(\",d\")(d) }\r\n\r\n\r\n\r\n\r\n    // Setting X & Y scales\r\n    const x = d3.scaleLinear([0, 1], [margin.left, width - margin.right]);\r\n    const y = d3.scaleBand()\r\n    .domain(d3.range(n + 1))\r\n    .rangeRound([margin.top, margin.top + barSize * (n + 1 + 0.1)])\r\n    .padding(0.1);\r\n\r\n    // Create a ranking for all political parties per day\r\n    // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n    function rank(value) {\r\n      const data = Array.from(partijen, partij => ({partij, midden: value(partij)}));\r\n      data.sort((a, b) => d3.descending(a.midden, b.midden));\r\n      for (let i = 0; i < data.length; ++i) data[i].ranking = Math.min(n, i);\r\n      return data;\r\n  }\r\n\r\n  console.log(rank(name => datevalues[0][1].get(name)))\r\n\r\n\r\n  // Creating keyframes: frames (per day) that display the ranking and spendings of political parties \r\n    // Used for animating between values\r\n    // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n    const keyframes = [];\r\n    let ka, a, kb, b;\r\n    for ([[ka, a], [kb, b]] of d3.pairs(datevalues)) {\r\n        for (let i = 0; i <= k; ++i) {\r\n        const t = i / k;\r\n        keyframes.push([\r\n            new Date(ka * (1 - t) + kb * t),\r\n            rank(partij => (a.get(partij) || 0) * (1 - t) + (b.get(partij) || 0) * t)\r\n          ]);\r\n        }\r\n    }\r\n\r\n\r\n    // Keyframes per political party name + previous and next frames for al parties\r\n    // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n    const nameframes = d3.groups(keyframes.flatMap(([, data]) => data), d => d.partij)\r\n    const prev = new Map(nameframes.flatMap(([, data]) => d3.pairs(data, (a, b) => [b, a])))\r\n    const next = new Map(nameframes.flatMap(([, data]) => d3.pairs(data)))\r\n\r\n\r\n//    // Appending a start/stop button, used for pausing and (re)-starting the animation\r\n//     // Adapted from: https://medium.com/@tarsusi/make-your-own-custom-bar-chart-race-with-d3-js-b7d6cfc4d0bd\r\n//     d3.select(\".barchartdiv\")\r\n//         .append(\"button\")\r\n//             .attr(\"class\", \"controls red button\")\r\n//             .text(\"Pauzeer\")\r\n//             .on(\"click\", function() {\r\n//                 if (this.innerHTML === \"Pauzeer\") {\r\n//                     this.innerHTML = \"Hervat\";\r\n//                     stop();\r\n//                 } else if (this.innerHTML === \"Hervat\") {\r\n//                     this.innerHTML = \"Pauzeer\";\r\n//                     start();\r\n//                 } else {\r\n//                     this.innerHTML = \"Pauzeer\";\r\n//                     render();\r\n//                 }\r\n//             });\r\n\r\n // Slider for jumping to a specific date (keyframe), using D3 simple slider plugin\r\n    // Values between 0 and last keyframe\r\n    // Sources: https://bl.ocks.org/johnwalley/e1d256b81e51da68f7feb632a53c3518 & https://github.com/johnwalley/d3-simple-slider\r\n    const sliderFrame =\r\n        sliderBottom()\r\n        .min(0)\r\n        .max((keyframes.length) - 1)\r\n        .width(width- 80)\r\n        .step(1)\r\n        .fill('var(--ftm-red)')\r\n        .handle(\r\n            d3\r\n            .symbol()\r\n            .type(d3.symbolCircle)\r\n            .size(250)()\r\n        )\r\n        .on('start', val => {\r\n            // When clicking somewhere on the slider > render bar chart race with new value\r\n            render(val);\r\n        })\r\n        .on('drag', val => {\r\n            // When dragging slider > stop bar chart race animation, render with new value\r\n            svg.interrupt() \r\n            render(val)\r\n        });\r\n\r\n\r\n\r\n// Apend a new svg (for the slider) to the main bar chart div\r\nconst gFrameslider = d3\r\n.select('.barchartdiv')\r\n.append('svg')\r\n.attr(\"width\", width)\r\n.attr(\"height\", 20)\r\n    .attr('class', 'frameslider')\r\n.append('g')\r\n    .attr('transform', 'translate(32,10)')\r\n\r\ngFrameslider.call(sliderFrame)\r\n\r\n  // Coverting the date strings to real date objects (unique values), used for the timeline\r\n  const dataDates = [...(new Set(data.map(d => d.datum)))].map(function(d) {\r\n    return new Date(d);\r\n})\r\n\r\n// Coverting the month strings to real date objects (unique values), used for the timeline tick values\r\nconst dataMonths = [...(new Set(data.map(d => d.maand)))].map(function(d) {\r\n    return new Date(d);\r\n})\r\n\r\n\r\n  // Timeline below the keyframe slider. Used D3 simple slider plugin.\r\n    // Values are dates (in stead of keyframe numbers that are used with the slider)\r\n    // Sources: https://bl.ocks.org/johnwalley/e1d256b81e51da68f7feb632a53c3518 & https://github.com/johnwalley/d3-simple-slider\r\n    const timeline =\r\n        sliderBottom()\r\n        .min(d3.min(dataDates))\r\n        .max(d3.max(dataDates))\r\n        .width(width-margin.right+30)\r\n        .tickFormat(timeLocale.utcFormat('%B'))\r\n        .tickValues(dataMonths);\r\n    \r\n    // Append a new svg for the timeline within the main bar chart div. \r\n    const gTimeline = d3\r\n        .select('.barchartdiv')\r\n        .append('svg')\r\n            .attr('class', 'scaledates')\r\n        .attr('width', width)\r\n        .attr('height', 40)\r\n        .append('g')\r\n            .attr('transform', 'translate(26.5,17)');\r\n\r\n    gTimeline.call(timeline);\r\n\r\n\r\n    // Create a time scale with d3.scaleTime, used for plotting the circles on the correct dates\r\n    // Source: https://observablehq.com/@d3/d3-scaletime#scaleUtc\r\n    const xTime = d3.scaleTime()\r\n    .domain([keyframes[0][0], keyframes[(keyframes.length) - 1][0]])\r\n    .range([0, width-60]);\r\n    \r\n    // Append a div to the body, used as a tooltip\r\n    const div = d3.select(\"body\").append(\"div\")\t\r\n    .attr(\"class\", \"tooltip\")\t\t\t\t\r\n    .style(\"opacity\", 0);\r\n\r\n    // Append circles to the timeline group, using the eventData (used for displaying political events)\r\n    gTimeline.selectAll(\"eventCircles\")\r\n        .data(eventData)\r\n        .enter()\r\n        .append('circle')\r\n            .attr('cx', function (d) {\r\n                const cx = xTime(new Date(d.datum));\r\n                return cx;\r\n            })\r\n            .attr('cy', \"-3\")\r\n            .attr('r', \"10\")\r\n            .attr(\"fill\", d => color(d.partij))\r\n            .style(\"opacity\", .8)\r\n            .on(\"mouseover\", function(event, d) {\r\n            \r\n                // On hover, display the tooltip. Source: https://bl.ocks.org/d3noob/180287b6623496dbb5ac4b048813af52\r\n            d3.select(this).style(\"opacity\", .3);\t\r\n            div.transition()\t\t\r\n                .duration(200)\t\t\r\n                .style(\"opacity\", .9);\t\t\r\n            div.html(`${d.gebeurtenis}`)\t\r\n                .style(\"left\", (event.pageX - 20) + \"px\")\t\t\r\n                .style(\"top\", (event.pageY + 17) + \"px\");\t\r\n            })\t\t\t\t\t\r\n            .on(\"mouseout\", function() {\r\n                d3.select(this).style(\"opacity\", 1);\t\t\t\r\n                div.transition()\t\t\r\n                    .duration(500)\t\t\r\n                    .style(\"opacity\", 0);\t\r\n            });\r\n\r\n    // Function used to generate the top-axis of the bar chart race, using d3.axisTop\r\n    // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n    function axis(svg) {\r\n      const g = svg.append(\"g\")\r\n          .attr(\"transform\", `translate(0,${margin.top})`);\r\n\r\n      const axis = d3.axisTop(x)\r\n          .tickFormat(euroFormat)\r\n          .ticks(width / 160)\r\n          .tickSizeOuter(0)\r\n          .tickSizeInner(-barSize * (n + y.padding()));\r\n\r\n      return (_, transition) => {\r\n          g.transition(transition).call(axis);\r\n          g.select(\".tick:first-of-type text\").remove();\r\n          g.selectAll(\".tick line\").attr(\"stroke\", \"white\");\r\n          g.select(\".domain\").remove();\r\n      };\r\n  }\r\n\r\n  // Function used to display the date of the current keyframe in the right corner. \r\n  // Keyframes 0 0 is the first date\r\n  // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n  function ticker(svg) {\r\n      const displayedDate = svg.append(\"text\")\r\n          .attr(\"text-anchor\", \"end\")\r\n          .attr(\"x\", width - 100)\r\n          .attr(\"y\", margin.top + barSize * (n + 1))\r\n          .attr(\"dy\", \"0.32em\")\r\n          .style('font-size', '2em')\r\n          .text(formatDate(keyframes[0][0]));\r\n\r\n      return ([date], transition) => {\r\n          transition.end().then(() => displayedDate.text(formatDate(date))).catch(() => {});\r\n      };\r\n  }\r\n\r\n      // Function used to return the correct color for a political party\r\n      function color(party) {\r\n        let color = \"\";\r\n        switch(party) {\r\n            case \"D66\":\r\n                color = \"#B2DF8A\";                \r\n            break;\r\n            case \"Forum voor Democratie\":\r\n            case \"FvD\":\r\n                color = \"#9C1616\";                \r\n            break;\r\n            case \"VVD\":\r\n                color = \"#FA9600\";                \r\n            break;\r\n            case \"GroenLinks\":\r\n                color = \"#43B825\";                \r\n            break;\r\n            case \"CDA\":\r\n                color = \"#438A69\";                \r\n            break;\r\n            case \"PvdA\":\r\n                color = \"#FB9B98\";                \r\n            break;\r\n            case \"SP\":\r\n                color = \"#DC3230\";                \r\n            break;\r\n            case \"PvdD\":\r\n                color = \"#B15929\";                \r\n            break;\r\n            case \"SGP\":\r\n                color = \"#F0F025\";                \r\n            break;\r\n            case \"DENK\":\r\n                color = \"#53C5C9\";                \r\n            break;\r\n            case \"CU\":\r\n            case \"Christen Unie\":\r\n            case \"ChristenUnie\":\r\n                color = \"#1F78B4\";                \r\n            break;\r\n            case \"50 Plus\":\r\n            case \"50Plus\":\r\n                color = \"#972EBA\";                \r\n            break;\r\n            case \"PVV\":\r\n                color = \"#88C6C1\";                \r\n            break;\r\n            default:\r\n                color = \"var(--link-color)\";                \r\n            break;\r\n        }\r\n        return color;\r\n    }\r\n\r\n\r\n  function bars(svg) {\r\n    let bar = svg.append(\"g\")\r\n        .selectAll(\"rect\");\r\n\r\n    return ([, data], transition) => bar = bar\r\n        .data(data.slice(0, n), d => d.partij)\r\n        .join(\r\n        enter => enter.append(\"rect\")\r\n            .attr(\"fill\", d => color(d.partij))\r\n            .attr(\"height\", y.bandwidth())\r\n            .attr(\"x\", x(0))\r\n            .attr(\"y\", d => y((prev.get(d) || d).ranking))\r\n            .attr(\"width\", d => x((prev.get(d) || d).midden) - x(0)),\r\n        update => update,\r\n        exit => exit.transition(transition).remove()\r\n            .attr(\"y\", d => y((next.get(d) || d).ranking))\r\n            .attr(\"width\", d => x((next.get(d) || d).midden) - x(0))\r\n        )\r\n        .call(bar => bar.transition(transition)\r\n        .attr(\"y\", d => y(d.ranking))\r\n        .attr(\"width\", d => x(d.midden) - x(0)))\r\n}\r\n\r\n\r\n    // Function used to make text transitions possible > here for the spending per party\r\n    // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n    function textTween(a, b) {\r\n      const i = d3.interpolateNumber(a, b);\r\n      return function(t) {\r\n          this.textContent = \"€\" + formatNumber(i(t));\r\n      };\r\n  }\r\n\r\n  // Function used to append the labels with party names and spending values. \r\n  // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n  function labels(svg) {\r\n      let label = svg.append(\"g\")\r\n          .style(\"font\", \"bold 12px var(--ftm-graph)\")\r\n          .style(\"font-variant-numeric\", \"tabular-nums\")\r\n          .attr(\"text-anchor\", \"start\")\r\n          .selectAll(\"text\");\r\n\r\n\r\n          //remove all the \r\n          d3.selectAll(\".tick\").selectAll(\"line\").remove();\r\n          d3.selectAll(\".tick\").selectAll(\"text\").remove()\r\n          d3.selectAll(\".slider\").selectAll(\".parameter-value\").selectAll('text').remove()\r\n\r\n\r\n      return ([, data], transition) => label = label\r\n          .data(data.slice(0, n), d => d.partij)\r\n          .join(\r\n          enter => enter.append(\"text\")\r\n              .attr(\"transform\", d => `translate(${x((prev.get(d) || d).midden)},${y((prev.get(d) || d).ranking)})`)\r\n              .attr(\"y\", y.bandwidth() / 2)\r\n              .attr(\"x\", 10)\r\n              .attr(\"dy\", \"-0.25em\")\r\n              .text(d => d.partij)\r\n              .call(text => text.append(\"tspan\")\r\n                  .attr(\"fill-opacity\", 0.7)\r\n                  .attr(\"font-weight\", \"normal\")\r\n                  .attr(\"x\", 10)\r\n                  .attr(\"dy\", \"1.15em\")),\r\n          update => update,\r\n          exit => exit.transition(transition).remove()\r\n              .attr(\"transform\", d => `translate(${x((next.get(d) || d).midden)},${y((next.get(d) || d).ranking)})`)\r\n              .call(g => g.select(\"tspan\").tween(\"text\", d => textTween(d.midden, (next.get(d) || d).midden)))\r\n          )\r\n          .call(bar => bar.transition(transition)\r\n          .attr(\"transform\", d => `translate(${x(d.midden)},${y(d.ranking)})`)\r\n          .call(g => g.select(\"tspan\").tween(\"text\", d => textTween((prev.get(d) || d).midden, d.midden))))\r\n  }\r\n\r\n  // start() stop() functions used to start and pause the animation. \r\n  // CurrentDataSetIndex registers the number of the displayed keyframe. \r\n  // Adapted from: https://medium.com/@tarsusi/make-your-own-custom-bar-chart-race-with-d3-js-b7d6cfc4d0bd\r\n  let elapsedTime = duration;\r\n//   let currentDataSetIndex = 0;\r\n\r\n//   function stop() {\r\n//       console.log(\"STOP\");\r\n//       svg.interrupt();\r\n//   }\r\n\r\n//   function start() {\r\n//       render(currentDataSetIndex);\r\n//       console.log(\"START\");\r\n//   }\r\n\r\n  // Functions that are called to update the parts of the bar chart race.\r\n  // Source barchart race: https://observablehq.com/@d3/bar-chart-race-explained\r\n  const updateBars = bars(svg);\r\n  const updateAxis = axis(svg);\r\n  const updateLabels = labels(svg);\r\n  const updateTicker = ticker(svg);\r\n\r\n  // Call the render function to render the bar chart race, starting with the first frame. \r\n  render(0)\r\n\r\n  // Function used to render the bar chart race with a given frame number (default is 0).\r\n  // Adapted from: https://medium.com/@tarsusi/make-your-own-custom-bar-chart-race-with-d3-js-b7d6cfc4d0bd \r\n  async function render(index = 0) {\r\n\r\n    //   currentDataSetIndex = index;\r\n\r\n      const transition = svg.transition()\r\n      .duration(elapsedTime)\r\n      .ease(d3.easeSinInOut)\r\n      .on(\"end\", () => {\r\n          if (index < keyframes.length) {\r\n              elapsedTime = duration;\r\n              d3.select(\".controls\").text(\"Pauzeer\");\r\n\r\n              // Render next frame\r\n              render(index + 1);\r\n          } else {\r\n              // If frames ended, give option to replay animation.\r\n              d3.select(\".controls\").text(\"Afspelen\");\r\n          }\r\n      })\r\n      .on(\"interrupt\", () => {\r\n\r\n          console.log(\"INTERRUPTED\");\r\n      });\r\n      \r\n      // Execute the functions that are used to update the bar chart race. \r\n      if (index < keyframes.length) { \r\n          sliderFrame.value(index)\r\n          x.domain([0, keyframes[index][1][0].midden]);\r\n          updateTicker(keyframes[index], transition);\r\n          updateAxis(keyframes[index], transition);\r\n          updateBars(keyframes[index], transition);\r\n          updateLabels(keyframes[index], transition);\r\n      }\r\n\r\n      // Wait for the transition to end. \r\n      // Catch promise error, generated when animation is interrupted. \r\n      // Source: https://stackoverflow.com/questions/37624322/uncaught-in-promise-undefined-error-when-using-with-location-in-facebook-gra\r\n      await transition.end().then(() => {}).catch(() => {});\r\n  }\r\n    }\r\n    createBarChart()\r\n\r\n    return (\r\n      <div className=\"barchartdiv\" width=\"100%\">\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default BarchartRace;","import React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst Loading = props => {\r\n  return (\r\n    <ContentLoader width={200} height={200} viewBox=\"0 0 200 200\" {...props}>\r\n      <rect y=\"30\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"40\" />\r\n      <rect y=\"60\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"55\" />\r\n      <rect y=\"90\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"74\" />\r\n      <rect y=\"120\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"120\" />\r\n      <rect y=\"150\" x=\"30\" rx=\"0\" ry=\"0\" height=\"25\" width=\"58\" />\r\n    </ContentLoader>\r\n  )\r\n}\r\n\r\nLoading.metadata = {\r\n  name: 'Phuong Dao',\r\n  github: 'dao-phuong',\r\n  description: 'Bar Chart',\r\n  filename: 'BarChart',\r\n}\r\n\r\nexport default Loading","import * as d3 from \"d3\"\r\n\r\nasync function fetchData(setDataState){\r\n\r\n    if(localStorage.data){\r\n        console.log('all clear')\r\n        setDataState('finished')\r\n\r\n        return\r\n    }else{\r\n        const daySpendDataURL = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vSpwttasVjXReLn69FtOXSrwWxYjKqVSKiRenwS9xU76b_-NX6-YRYfRQEwm0ipV3sLAiNPrCz3uO7D/pub?gid=161211961&single=true&output=csv\"\r\n        const eventDashboardURL = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vS0ispSJft5GVxwMtalNZLqlwrk6j9Ig2azCOlGp0IGfrDbKTFBinaOpgGou1Nyz-_w2-sIqii0_DwK/pub?gid=0&single=true&output=csv\"\r\n    \r\n        async function getData(name){\r\n            const data = await d3.csv(name)\r\n            return data\r\n        }\r\n    \r\n        async function getAllData() {\r\n                const dayData = await getData(daySpendDataURL)\r\n                const eventData = await getData(eventDashboardURL)\r\n\r\n\r\n                localStorage.setItem(\"data\", JSON.stringify(dayData))\r\n                localStorage.setItem(\"eventData\", JSON.stringify(eventData))\r\n                setDataState('finished')\r\n\r\n\r\n\r\n                console.log(dayData)\r\n                console.log(eventData)\r\n        }\r\n    \r\n        getAllData().catch((err) => {\r\n            console.log(err)\r\n            console.log(\"handled!\") \r\n        })\r\n    }\r\n\r\n} \r\n\r\nexport default fetchData","import React, { useEffect, useState} from 'react'\n\nimport BarchartRace from './components/BarchartRace'\nimport Loading from './components/Loading'\nimport fetchData from './helper/data'\n\nfunction App() {\n\n\n  const [dataState, setDataState] = useState('loading')\n\n\n  useEffect(() => {\n\n      async function getData(){\n      await fetchData(setDataState)\n    }\ngetData()\n      }, [])\n\n\nif(dataState === 'loading'){\n  return (\n    <div className=\"App\">\n   <Loading  />\n    </div>\n  )\n}else if(dataState === \"finished\"){\n\n  return (\n    <div className=\"App\">\n   <BarchartRace />\n    </div>\n  )\n  }\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}